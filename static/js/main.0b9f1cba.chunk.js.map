{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ListElement/ListElement.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ListElement/ListElement.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","addItem","removeItem","connect","state","items","contacts","dispatch","addNewContact","newContact","labelNameId","uuidv4","labelNumberId","inputNameProps","id","type","name","pattern","title","inputNumberProps","useState","setName","number","setNumber","handleInput","e","target","value","isNewContactValid","filter","item","toLowerCase","length","alert","reset","className","s","contactForm","onSubmit","preventDefault","nameBlock","htmlFor","labelName","required","onChange","numberBlock","labelNumber","filterHandler","event","filterInput","deleteHandler","deleteBtnNameAsId","delete","onClick","contactsList","filterWord","includes","map","App","itemsReducer","createReducer","actions","payload","filterReducer","_","contactsReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b9f1cba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__UoK1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ListElement_delete__1bJwG\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"filter/changeFilter\");\nexport const addItem = createAction(\"items/addItem\");\nexport const removeItem = createAction(\"items/removeItem\");\nexport const filterItems = createAction(\"items/filterItems\");\n","import { v4 as uuidv4 } from 'uuid';\nimport '../../App';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/actions';\n\nconst ContactForm = ({ items, addNewContact }) => {\n  const labelNameId = uuidv4();\n  const labelNumberId = uuidv4();\n\n  const inputNameProps = {\n    id: labelNameId,\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  };\n\n  const inputNumberProps = {\n    id: labelNumberId,\n    type: 'tel',\n    name: 'number',\n    pattern:\n      '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n  };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    isNewContactValid({ id: uuidv4() });\n    reset();\n  };\n\n  const isNewContactValid = ({ id }) => {\n    const matchedContactsList = items.filter(item => {\n      return item.name.toLowerCase() === name.toLowerCase();\n    });\n    if (matchedContactsList.length !== 0) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      addNewContact({ id, name, number });\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contactForm} onSubmit={handleFormSubmit}>\n      <div className={s.nameBlock}>\n        <label htmlFor={labelNameId} className={s.labelName}>\n          Name\n        </label>\n        <input\n          value={name}\n          required\n          {...inputNameProps}\n          onChange={handleInput}\n        />\n      </div>\n      <div className={s.numberBlock}>\n        <label htmlFor={labelNumberId} className={s.labelNumber}>\n          Number\n        </label>\n\n        <input\n          value={number}\n          required\n          {...inputNumberProps}\n          onChange={handleInput}\n        />\n      </div>\n      <button type=\"submit\">Add contact </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  items: PropTypes.array.isRequired,\n  addNewContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewContact: newContact => dispatch(addItem(newContact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/actions';\n\nconst Filter = ({ value, filterHandler }) => {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={filterHandler}\n      ></input>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: state.contacts.filter,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterHandler: event => dispatch(changeFilter(event.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from 'prop-types';\nimport s from './ListElement.module.css';\nimport { connect } from 'react-redux';\nimport { removeItem } from '../../../redux/actions';\n\nconst ListElement = ({ name, number, deleteBtnNameAsId, deleteHandler }) => {\n  return (\n    <li>\n      {name}: {number}\n      <button\n        className={s.delete}\n        type=\"button\"\n        name={deleteBtnNameAsId}\n        onClick={deleteHandler}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteBtnNameAsId: PropTypes.string.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteHandler: event => dispatch(removeItem(event.target.name)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ListElement);\n","import ListElement from './ListElement';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst ContactList = ({ contactsList }) => {\n  return (\n    <ul>\n      {contactsList.map(({ id, name, number }) => {\n        return (\n          <ListElement\n            key={id}\n            name={name}\n            number={number}\n            deleteBtnNameAsId={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contactsList: PropTypes.array.isRequired,\n};\n\nconst filteredContactList = function (contacts, filterWord) {\n  let result = [];\n  result = contacts.filter(item => {\n    return item.name.toLowerCase().includes(filterWord.toLowerCase());\n  });\n  return result;\n};\n\nconst mapStateToProps = state => {\n  return {\n    contactsList: filteredContactList(\n      state.contacts.items,\n      state.contacts.filter,\n    ),\n  };\n};\n\nexport default connect(mapStateToProps, null)(ContactList);\n","import ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\n\nconst itemsReducer = createReducer([], {\n  [actions.addItem]: (state, { payload }) => [...state, payload],\n  [actions.removeItem]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./reducers\";\nimport logger from \"redux-logger\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3xAF0\",\"labelName\":\"ContactForm_labelName__1e8vf\",\"labelNumber\":\"ContactForm_labelNumber__1akA8\",\"nameBlock\":\"ContactForm_nameBlock__3axq0\",\"numberBlock\":\"ContactForm_numberBlock__2fvt8\"};"],"sourceRoot":""}